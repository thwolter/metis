[project]
name = "classifier"
version = "0.0.2"
description = "Classify documents and extract metadata using embedded document chunks."
authors = [
    { name = "Thomas Wolter", email = "thwolter@gmail.com" },
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.118.1",
    "langchain>=0.3.27",
    "langchain-core>=0.3.78",
    "langchain-openai>=0.3.35",
    "langchain-postgres>=0.0.15",
    "langchain-tavily>=0.2.11",
    "langgraph>=0.2.6",
    "loguru>=0.7.3",
    "notebook>=7.4.7",
    "psycopg2>=2.9.10",
    "pydantic-settings>=2.11.0",
    "python-dotenv>=1.0.1",
]
[dependency-groups]
dev = [
    "anyio>=4.7.0",
    "commitizen>=4.9.1",
    "isort>=6.1.0",
    "langgraph-cli[inmem]>=0.2.8",
    "pre-commit>=4.3.0",
    "pyrefly>=0.36.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=1.2.0",
    "ruff>=0.14.0",
    "ssort>=0.15.0",
    "typer>=0.19.2",
    "vulture>=2.14",
]

[build-system]
requires = ["setuptools>=73.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "uv"
update_changelog_on_bump = true
major_version_zero = true

[tool.pyrefly]
project-includes = ["**/*"]
project-excludes = [
    "**/node_modules",
    "**/__pycache__",
    "**/*venv/**/*",
]

[tool.ruff]
line-length = 120

[tool.ruff.format]
quote-style = "single"
